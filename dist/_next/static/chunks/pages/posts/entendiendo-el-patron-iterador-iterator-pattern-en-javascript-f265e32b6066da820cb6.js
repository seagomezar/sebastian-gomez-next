_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[24],{esLp:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/posts/entendiendo-el-patron-iterador-iterator-pattern-en-javascript",function(){return a("oGhE")}])},j53b:function(e,t,a){"use strict";var n=a("1OyB"),r=a("vuIU"),o=a("Ji7U"),s=a("md7G"),c=a("foSv"),i=a("MX0m"),l=a.n(i),u=a("q1tI"),d=a.n(u),p=(a("YFqc"),d.a.createElement);function m(e){var t=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,n=Object(c.a)(e);if(t){var r=Object(c.a)(this).constructor;a=Reflect.construct(n,arguments,r)}else a=n.apply(this,arguments);return Object(s.a)(this,a)}}var b={CSS:"primary",HTML:"secondary",Javascript:"warning",Firebase:"warning","Google Maps":"darkgreen",Angular:"danger",React:"success","Desarrollo Web":"info","Google Datastudio":"primary","Big Query":"danger",NodeJS:"node",Other:"dark",Typescript:"typescript","Programaci\xf3n Reactiva":"reactive"},j=function(e){Object(o.a)(a,e);var t=m(a);function a(){return Object(n.a)(this,a),t.apply(this,arguments)}return Object(r.a)(a,[{key:"render",value:function(){var e=this.props.name;return p("a",{className:"jsx-187945056 "+("badge badge-"+(b[e]||"dark")||!1)},e,p(l.a,{id:"187945056"},[".badge.jsx-187945056{-webkit-text-decoration:none;text-decoration:none;margin-right:1em;color:white;padding:0.5em 0.5em;margin:0.5em 0;display:inline-block;}",".badge-primary.jsx-187945056{background-color:blue;}",".badge-secondary.jsx-187945056{background-color:green;}",".badge-darkgreen.jsx-187945056{background-color:#3cba54;}",".badge-danger.jsx-187945056{background-color:red;}",".badge-warning.jsx-187945056{background-color:#e5be01;}",".badge-info.jsx-187945056{background-color:gray;}",".badge-dark.jsx-187945056{background-color:black;}",".badge-success.jsx-187945056{background-color:green;}",".badge-node.jsx-187945056{background-color:#11d92f;}",".badge-typescript.jsx-187945056{background-color:#4f8cf6;}",".badge-reactive.jsx-187945056{background-color:#e10c8c;}"]))}}]),a}(d.a.Component),g=d.a.createElement;function f(e){var t=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,n=Object(c.a)(e);if(t){var r=Object(c.a)(this).constructor;a=Reflect.construct(n,arguments,r)}else a=n.apply(this,arguments);return Object(s.a)(this,a)}}var h=function(e){Object(o.a)(a,e);var t=f(a);function a(){return Object(n.a)(this,a),t.apply(this,arguments)}return Object(r.a)(a,[{key:"render",value:function(){var e=this.props,t=e.date,a=e.tags;e.slug;return g("small",{className:"jsx-1750184873 "},g("span",{className:"jsx-1750184873"},g("strong",{className:"jsx-1750184873"},"Fecha: "),new Date(t).toLocaleDateString("es-CO")," -",g("strong",{className:"jsx-1750184873"}," Autor: ")," Sebastian Gomez"),g("span",{className:"jsx-1750184873"}),g("span",{className:"jsx-1750184873"},a.map((function(e,t){return g(j,{name:e,key:t})}))),g(l.a,{id:"1750184873"},["a.jsx-1750184873{color:#9eabb3;-webkit-text-decoration:none;text-decoration:none;}","small.jsx-1750184873{color:#9eabb3;}","span.jsx-1750184873{display:block;}","span.jsx-1750184873:first-child{margin-top:0.2em;}","span.jsx-1750184873:last-child{margin-bottom:1em;}"]))}}]),a}(d.a.Component);t.a=h},oGhE:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return p}));var n=a("wx14"),r=a("Ff2n"),o=a("q1tI"),s=a.n(o),c=a("7ljp"),i=a("j53b"),l=a("6G3q"),u=a("37hk"),d=(s.a.createElement,{});function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)(l.a,{category:"Javascript",date:"2020-05-05",title:"Entendiendo el patr\xf3n iterador \xa8Iterator pattern\xa8 en Javascript",slug:"entendiendo-el-patron-iterador-iterator-pattern-en-javascript",thumbnailImage:"/rxjs.png",excerpt:"En este post aprenderemos como implementar el patr\xf3n iterador en Javascript y en que situaciones lo podemos usar.",mdxType:"HeadSite"}),Object(c.b)("h1",null,"Entendiendo el patr\xf3n iterador Iterator pattern en Javascript"),Object(c.b)(i.a,{slug:"entendiendo-el-patron-iterador-iterator-pattern-en-javascript",tags:["Javascript","Programaci\xf3n Reactiva","Desarrollo Web"],date:"2020-05-05",mdxType:"PostHeader"}),Object(c.b)("p",null,"En este post aprenderemos como implementar el patr\xf3n iterador en Javascript y en que situaciones lo podemos usar."),Object(c.b)("p",null,"El patr\xf3n iterador es uno de los patrones de dise\xf1o de software m\xe1s usado en Javascript y tambi\xe9n uno de los m\xe1s sencillos. Es un patr\xf3n de comportamiento ya que define como se comunican objetos entre si. De \xe9l se extienden importantes aplicaciones que pueden ayudar a definir mejores arquitecturas en aplicaciones web, por lo que su uso y estudio es altamente recomendado. En este post aprenderemos como implementarlo en Javascript y en que situaciones lo podemos usar."),Object(c.b)("p",null,"Empecemos por definir este patr\xf3n. B\xe1sicamente todos hemos usado arrays de esta forma ","[","1,2,3,4","]",' y usualmente si queremos recorrerlo nos inclinamos r\xe1pidamente por usar una estructura c\xedclica como "for" o \u201cwhile\u201d sin embargo esto hace que el c\xf3digo sea un poco mas imperativa y menos declarativa haciendo que no tengamos tanto control con cada dato unitario dentro del arreglo. Desde este punto es donde empieza a cobrar fuerza este patron iterador ya que b\xe1sicamente lo que nos provee es una manera de recorrer el arreglo de una manera declarativa. El principal principio de este patr\xf3n es permitirnos recorrer colecciones de objetos de una manera que podamos decidir cuando queremos el siguiente objeto y cuando no. Para ello obligatoriamente deben existir tres m\xe9todos dentro del iterador:'),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"first() --\x3e Retorna siempre el primer objeto de la colecci\xf3n."),Object(c.b)("li",{parentName:"ul"},"next() --\x3e Retorna el siguiente objeto de la colecci\xf3n si existe."),Object(c.b)("li",{parentName:"ul"},"current() --\x3e Retorna el objeto actual de la colecci\xf3n sobre el estamos parado.")),Object(c.b)("p",null,"Empecemos entonces por definir una clase llamada iterator con estos tres m\xe9todos:"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"    class Iterator {\n      constructor(collection) {\n        this.index = 0;\n        this.collection = collection;\n      }\n      first() {\n        return this.collection\\[0\\];\n      }\n      next() {\n        this.index += 1;\n        return this.collection\\[this.index\\];\n      }\n      current() {\n        return this.collection\\[this.index\\];\n      }\n    }\n")),Object(c.b)("p",null,"Como ves usando ES6 hemos definido una clase que permite hacer operaciones muy b\xe1sicas sobre el array, pero siempre conservando cual es el \xedndice sobre que esta la colecci\xf3n en todo momento. Esto nos permitir\xe1 f\xe1cilmente movernos sobre ella. Adicionalmente aunque no es obligatorio en la implementaci\xf3n de este patr\xf3n. Si es altamente recomendado a\xf1adir dos m\xe9todos utilitarios mas sobre la clase iterador. Estos son:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"hasNext() \u2014> Retorna true si hay mas items disponibles en la colecci\xf3n."),Object(c.b)("li",{parentName:"ul"},"reset() \u2014> Permite reiniciar el indice para iterar de nuevo sobre la colecci\xf3n.")),Object(c.b)("p",null,"Veamos entonces como ser\xeda la implementaci\xf3n:"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"    class Iterator {\n      \u2026\n      reset() {\n        this.index = 0;\n      }\n\n      hasNext() {\n        return (this.collection.length > this.index +1);\n      }\n      \u2026\n    }\n")),Object(c.b)("p",null,"Super simple!, una vez que tu clase est\xe9 definida puedes usar pr\xe1cticamente cualquier tipo de array para construir tu iterador y operar sobre \xe9l. Veamos un ejemplo de su uso pr\xe1ctico usando un ciclo while:"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"    // Usando un ciclo while\n    const arr = \\[1,2,3,4,5\\];\n    const arrayIterator = new Iterator(arr);\n    console.log(arrayIterator.first());\n    while (arrayIterator.hasNext()) {\n      console.log(arrayIterator.next());\n    }\n")),Object(c.b)("p",null,"De esta manera queda totalmente completo el patr\xf3n iterador. Como vez es muy f\xe1cil implementar el patr\xf3n iterador y su utilidad es casi inmediata. A continuaci\xf3n podr\xe1s observar todo el c\xf3digo completo de este ejemplo:"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"    class Iterator {\n\n      constructor(collection) {\n        this.index = 0;\n        this.collection = collection;\n      }\n      first() {\n        return this.collection\\[0\\];\n      }\n\n      next() {\n        this.index += 1;\n        return this.collection\\[this.index\\];\n      }\n\n      current() {\n        return this.collection\\[this.index\\];\n      }\n\n      reset() {\n        this.index = 0;\n      }\n\n      hasNext() {\n          return (this.index + 1 < this.collection.length );\n      }\n    }\n\n    const arr = \\[1,2,3,4,5\\];\n\n    const arrayIterator = new Iterator(arr);\n\n    console.log(arrayIterator.first());\n\n\n    while (arrayIterator.hasNext()) {\n      console.log(arrayIterator.next());\n    }\n")),Object(c.b)("p",null,"Eso es todo, espero que este post te sea de utilidad y lo puedas aplicar a alg\xfan proyecto que tengas en mente y que simplemente te haya ayudado a entender la naturaleza del patr\xf3n iterator. d\xe9jame un comentario si lograste implementarlo, si quieres a\xf1adir alguna otra funcionalidad o si tienes alguna duda no dudes en dejarme un comentario en la parte de abajo, recuerda que si te gust\xf3 tambi\xe9n puedes compartir usando los links a las redes sociales en la parte de abajo."),Object(c.b)(u.a,{slug:"entendiendo-el-patron-iterador-iterator-pattern-en-javascript",mdxType:"Discuss"}))}p.isMDXComponent=!0}},[["esLp",0,1,2,3,4,5]]]);