_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[21],{"9amX":function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/posts/crea-tu-api-rest-con-nextjs",function(){return a("VdZ8")}])},VdZ8:function(e,n,a){"use strict";a.r(n),a.d(n,"default",(function(){return d}));var t=a("wx14"),r=a("Ff2n"),s=a("q1tI"),o=a.n(s),c=a("7ljp"),i=a("j53b"),l=a("6G3q"),u=a("37hk"),p=(o.a.createElement,{});function d(e){var n=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(t.a)({},p,a,{components:n,mdxType:"MDXLayout"}),Object(c.b)(l.a,{category:"Desarrollo Web",date:1613600041916,title:"Crea tu API Rest con Next.js",slug:"crea-tu-api-rest-con-nextjs",thumbnailImage:"/nextjs.png",excerpt:"Plugins, plugins y m\xe1s plugins, ya que has aprendido que la configuraci\xf3n de Next.js se puede extender y personalizar f\xe1cilmente, en este post cubriremos m\xe1s a fondo el tema de los plugins que puedes utilizar desde la configuraci\xf3n misma de Next.js",mdxType:"HeadSite"}),Object(c.b)("h1",null,"Crea tu API Rest con Next.js"),Object(c.b)(i.a,{tags:["Next.js","Javascript","NodeJS","Desarrollo Web"],date:1613600041916,slug:"crea-tu-api-rest-con-nextjs",mdxType:"PostHeader"}),Object(c.b)("p",null,"Es muy simple crear una API Rest con Next.js lo \xfanico que debes hacer es crear una\ncarpeta llamada ",Object(c.b)("em",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"em"},"api"))," dentro de carpeta de p\xe1ginas. Los nombres son importantes\nporque son convenciones que Next.js tiene para nosotros. "),Object(c.b)("p",null,"Next.js entiende que cuando tienes una carpeta llamada ",Object(c.b)("em",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"em"},"api"))," la trata como\nun archivo que tiene datos para ser expuestos como una api."),Object(c.b)("p",null,"Creemos entonces una estructura como esta:"),Object(c.b)("pre",null,Object(c.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),"pages\n  api\n    hello.js\n")),Object(c.b)("p",null,"\u26a0\ufe0f",Object(c.b)("strong",{parentName:"p"},"Tip:")," Las rutas de las APIs de que haces con Next.js no son lo mismo que las\n",Object(c.b)("em",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"em"},"Serveless API Function"))," que Vercel ofrece en su plataforma aunque comparter algunas\nsimilitudes."),Object(c.b)("p",null,"Creemos entonces algunos endpoints en nuestra API Rest para guardar comentarios. Pero\nprimero miremos como expondr\xedamos datos de la panera m\xe1s sencilla:"),Object(c.b)("pre",null,Object(c.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),"// pages/api/data.js\n// route => /api/data\n\nexport default (req, res) => {\n  res.statusCode = 200\n  res.setHeader('Content-Type', 'application/json')\n  res.end(JSON.stringify({ estamosEn: 'Medell\xedn JS' }))\n}\n")),Object(c.b)("p",null,"Como ves no se diferencia mucho a un servidor de express. Como notar\xe1s esta funci\xf3n\nresponder\xe1 a todos los llamados GET, PUT, POST y DELETE, y si has hecho una API Rest\ncon alg\xfan otro framework o lenguaje te dar\xe1s cuenta que es necesario tener m\xe9todos\ndiferentes que respondan por las operaciones correctas. Por lo anterior vamos a necesitar\nun middleware en nuestro caso utilizaremos ",Object(c.b)("a",Object(t.a)({parentName:"p"},{href:"https://www.npmjs.com/package/connect"}),Object(c.b)("em",{parentName:"a"},"connect"))," que nos har\xe1 m\xe1s f\xe1cil la vida."),Object(c.b)("p",null,"Primero instalaremos las dependencias:"),Object(c.b)("p",null,"npm"),Object(c.b)("pre",null,Object(c.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"npm i next-connect cors\n")),Object(c.b)("p",null,"yarn"),Object(c.b)("pre",null,Object(c.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"yarn add next-connect cors\n")),Object(c.b)("p",null,"luego en nuestro archivo data.js podr\xedamos pegar lo siguiente:"),Object(c.b)("pre",null,Object(c.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),"// pages/api/data\nimport nc from 'next-connect';\nimport cors from 'cors'\n\nconst handler = nc()\n  // use connect based middleware\n  .use(cors())\n  // express like routing for methods\n  .get((req, res) => {\n    res.send('Hola Medell\xedn JS')\n  })\n  .post((req, res) => {\n    res.json({ hola: 'MedellinJS' })\n  })\n  .put(async (req, res) => {\n    res.end('Hola Amigos')\n  })\n  \nexport default handler;\n")),Object(c.b)("p",null,"Bien, ahora imaginemos que queremos para nuestro Blog poder administrar comentarios\ny para ello deber\xedamos de crear un simple CRUD con las respectivas rutas:"),Object(c.b)("pre",null,Object(c.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),"    create comment => POST /api/comment\n    update comment => PATCH /api/comment/:id\n    delete comment => DELETE /api/comment/:id\n    get one comment => GET /api/comment/:id\n    get all comment => GET /api/comment/\n")),Object(c.b)("p",null,"Dado estas rutas en realidad solo tenemos dos rutas per diferentes operaciones:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"/api/comment"),Object(c.b)("li",{parentName:"ul"},"/api/comment/:id")),Object(c.b)("p",null,"En primer lugar creemos nuestro lugar para almacenar la informaci\xf3n no ser\xe1 una base\nde datos (No por ahora) ser\xe1 simplemente en memoria."),Object(c.b)("pre",null,Object(c.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),"// src/data/data.js\nconst comments = []\n\nmodule.exports = comments\n")),Object(c.b)("p",null,"ahora creemos la estructura de carpetas para nuestras dos rutas:"),Object(c.b)("pre",null,Object(c.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),"pages\n  api\n    comments\n      [id].js\n      index.js\n")),Object(c.b)("p",null,"\xbfQu\xe9 escribir en cada uno?"),Object(c.b)("p",null,"Bueno no ser\xe1 dif\xedcil de adivinar dado nuestro ejemplo anterior:"),Object(c.b)("pre",null,Object(c.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),"// pages/api/note/index.js\nimport nc from 'next-connect'\nimport notes from '../../../src/data/data'\n\nconst handler = nc()\n  .get((req, res) => {\n    res.json({data: notes})\n  })\n  .post((req, res) => {\n    const id = Date.now()\n    const note = {...req.body, id}\n\n    notes.push(note)\n    res.json({data: note})\n  })\nexport default handler\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),"// pages/api/comment/[id].js\nimport nc from 'next-connect'\nimport comments from '../../../data/data'\n\nconst getcomment = id => comments.find(n => n.id === parseInt(id))\n\nconst handler = nc()\n  .get((req, res) => {\n    \n    const comment = getcomment(req.query.id)\n\n    if (!comment) {\n      res.status(404)\n      res.end()\n      return\n    }\n\n    res.json({data: comment})\n  })\n  .patch((req, res) => {\n    const comment = getcomment(req.query.id)\n\n    if (!comment) {\n      res.status(404)\n      res.end()\n      return\n    }\n    \n    const i = comments.findIndex(n => n.id === parseInt(req.query.id))\n    const updated = {...comment, ...req.body}\n\n    comments[i] = updated\n    res.json({data: updated})\n  })\n  .delete((req, res) => {\n    const comment = getcomment(req.query.id)\n\n    if (!comment) {\n      res.status(404)\n      res.end()\n      return\n    }\n    const i = comments.findIndex(n => n.id === parseInt(req.query.id))\n    \n    comments.splice(i, 1)\n\n    res.json({data: req.query.id})\n  })\n  \n\nexport default handler\n")),Object(c.b)("p",null,"\ud83c\udf93",Object(c.b)("strong",{parentName:"p"},"Tip:")," Puedes usar todos los parametros que necesitas tal cual como lo haces\nen un servidor t\xedpico de express mediante ",Object(c.b)("em",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"em"},"req.params"))," o ",Object(c.b)("em",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"em"},"req.query")),"."),Object(c.b)("p",null,"Eso es todo, espero que este post te sea de utilidad y lo puedas aplicar a\nalg\xfan proyecto que tengas en mente o que simplemente te haya ayudado a entender\ncomo crear APIs Rest y como usarla en tus proyectos de Next.js."),Object(c.b)("p",null,"D\xe9jame un comentario si te sirvi\xf3, si quieres a\xf1adir\nalguna opini\xf3n o si tienes alguna duda no dudes en dejarme un comentario\nen la parte de abajo, recuerda que si te gust\xf3 tambi\xe9n puedes compartir usando los links a\nlas redes sociales en la parte de abajo."),Object(c.b)(u.a,{slug:"crea-tu-api-rest-con-nextjs",mdxType:"Discuss"}))}d.isMDXComponent=!0},j53b:function(e,n,a){"use strict";var t=a("1OyB"),r=a("vuIU"),s=a("Ji7U"),o=a("md7G"),c=a("foSv"),i=a("MX0m"),l=a.n(i),u=a("q1tI"),p=a.n(u),d=(a("YFqc"),p.a.createElement);function m(e){var n=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,t=Object(c.a)(e);if(n){var r=Object(c.a)(this).constructor;a=Reflect.construct(t,arguments,r)}else a=t.apply(this,arguments);return Object(o.a)(this,a)}}var b={CSS:"primary",HTML:"secondary",Javascript:"warning",Firebase:"warning","Google Maps":"darkgreen",Angular:"danger",React:"success","Desarrollo Web":"info","Google Datastudio":"primary","Big Query":"danger",NodeJS:"node",Other:"dark",Typescript:"typescript","Programaci\xf3n Reactiva":"reactive"},j=function(e){Object(s.a)(a,e);var n=m(a);function a(){return Object(t.a)(this,a),n.apply(this,arguments)}return Object(r.a)(a,[{key:"render",value:function(){var e=this.props.name;return d("a",{className:"jsx-187945056 "+("badge badge-"+(b[e]||"dark")||!1)},e,d(l.a,{id:"187945056"},[".badge.jsx-187945056{-webkit-text-decoration:none;text-decoration:none;margin-right:1em;color:white;padding:0.5em 0.5em;margin:0.5em 0;display:inline-block;}",".badge-primary.jsx-187945056{background-color:blue;}",".badge-secondary.jsx-187945056{background-color:green;}",".badge-darkgreen.jsx-187945056{background-color:#3cba54;}",".badge-danger.jsx-187945056{background-color:red;}",".badge-warning.jsx-187945056{background-color:#e5be01;}",".badge-info.jsx-187945056{background-color:gray;}",".badge-dark.jsx-187945056{background-color:black;}",".badge-success.jsx-187945056{background-color:green;}",".badge-node.jsx-187945056{background-color:#11d92f;}",".badge-typescript.jsx-187945056{background-color:#4f8cf6;}",".badge-reactive.jsx-187945056{background-color:#e10c8c;}"]))}}]),a}(p.a.Component),g=p.a.createElement;function O(e){var n=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,t=Object(c.a)(e);if(n){var r=Object(c.a)(this).constructor;a=Reflect.construct(t,arguments,r)}else a=t.apply(this,arguments);return Object(o.a)(this,a)}}var f=function(e){Object(s.a)(a,e);var n=O(a);function a(){return Object(t.a)(this,a),n.apply(this,arguments)}return Object(r.a)(a,[{key:"render",value:function(){var e=this.props,n=e.date,a=e.tags;e.slug;return g("small",{className:"jsx-1750184873 "},g("span",{className:"jsx-1750184873"},g("strong",{className:"jsx-1750184873"},"Fecha: "),new Date(n).toLocaleDateString("es-CO")," -",g("strong",{className:"jsx-1750184873"}," Autor: ")," Sebastian Gomez"),g("span",{className:"jsx-1750184873"}),g("span",{className:"jsx-1750184873"},a.map((function(e,n){return g(j,{name:e,key:n})}))),g(l.a,{id:"1750184873"},["a.jsx-1750184873{color:#9eabb3;-webkit-text-decoration:none;text-decoration:none;}","small.jsx-1750184873{color:#9eabb3;}","span.jsx-1750184873{display:block;}","span.jsx-1750184873:first-child{margin-top:0.2em;}","span.jsx-1750184873:last-child{margin-bottom:1em;}"]))}}]),a}(p.a.Component);n.a=f}},[["9amX",0,1,2,3,4,5]]]);