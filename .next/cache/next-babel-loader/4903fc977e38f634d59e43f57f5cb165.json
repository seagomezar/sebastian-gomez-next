{"ast":null,"code":"var _jsxFileName = \"/Users/s.gomez/Desktop/sebastian-gomez/components/PostExcerpt.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\n\nclass PostExcerpt extends React.Component {\n  getImage(post) {\n    if (!post.thumbnailImage) {\n      return __jsx(\"img\", {\n        src: \"/default-image.png\",\n        width: \"150px\",\n        className: \"img-fluid\",\n        alt: post.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      });\n    }\n\n    return __jsx(\"img\", {\n      src: post.thumbnailImage,\n      width: \"150px\",\n      className: \"img-fluid\",\n      alt: post.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  }\n\n  buildTag(tag, index) {\n    const tagColors = [\"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"dark\"];\n    const tagColor = \"badge badge-pill badge-\" + tagColors[Math.floor(Math.random() * tagColors.length)];\n    return __jsx(\"span\", {\n      key: index,\n      className: tagColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, tag);\n  }\n\n  render() {\n    console.log(this.props);\n    const {\n      index,\n      post\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"card border-0 m-2 article\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row no-gutters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.getImage(post)), __jsx(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-block px-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, post.title), __jsx(\"small\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Fecha publicaci\\xF3n: \"), post.date, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \" Autor: \"), \" Sebastian Gomez\", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" En: \"), post.tags.map((tag, index) => {\n      return this.buildTag(tag, index);\n    })), __jsx(\"p\", {\n      className: \"card-text text-justify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, post.excerpt), __jsx(Link, {\n      href: \"/[slug]\",\n      as: post.slug,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Seguir Leyendo\"))), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default PostExcerpt;","map":{"version":3,"sources":["/Users/s.gomez/Desktop/sebastian-gomez/components/PostExcerpt.js"],"names":["React","Link","PostExcerpt","Component","getImage","post","thumbnailImage","title","buildTag","tag","index","tagColors","tagColor","Math","floor","random","length","render","console","log","props","date","tags","map","excerpt","slug"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AAEtCC,EAAAA,QAAQ,CAACC,IAAD,EAAO;AACX,QAAI,CAACA,IAAI,CAACC,cAAV,EAA0B;AACxB,aACE;AACE,QAAA,GAAG,EAAC,oBADN;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,SAAS,EAAC,WAHZ;AAIE,QAAA,GAAG,EAAED,IAAI,CAACE,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD;;AACD,WACE;AACE,MAAA,GAAG,EAAEF,IAAI,CAACC,cADZ;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,SAAS,EAAC,WAHZ;AAIE,MAAA,GAAG,EAAED,IAAI,CAACE,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD;;AACDC,EAAAA,QAAQ,CAACC,GAAD,EAAMC,KAAN,EAAa;AACnB,UAAMC,SAAS,GAAG,CAChB,SADgB,EAEhB,WAFgB,EAGhB,SAHgB,EAIhB,QAJgB,EAKhB,SALgB,EAMhB,MANgB,EAOhB,MAPgB,CAAlB;AASA,UAAMC,QAAQ,GACZ,4BACAD,SAAS,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,SAAS,CAACK,MAArC,CAAD,CAFX;AAGA,WACE;AAAM,MAAA,GAAG,EAAEN,KAAX;AAAkB,MAAA,SAAS,EAAEE,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,GADH,CADF;AAKD;;AACHQ,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,UAAM;AAACV,MAAAA,KAAD;AAAQL,MAAAA;AAAR,QAAgB,KAAKe,KAA3B;AACA,WAAO;AAAK,MAAA,SAAS,EAAC,2BAAf;AAA2C,MAAA,GAAG,EAAEV,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACP;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKN,QAAL,CAAcC,IAAd,CAA3B,CADF,EAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BA,IAAI,CAACE,KAAjC,CADF,EAGE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEGF,IAAI,CAACgB,IAFR,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,sBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,EAKGhB,IAAI,CAACiB,IAAL,CAAUC,GAAV,CAAc,CAACd,GAAD,EAAMC,KAAN,KAAgB;AAC7B,aAAO,KAAKF,QAAL,CAAcC,GAAd,EAAmBC,KAAnB,CAAP;AACD,KAFA,CALH,CAHF,EAYE;AAAG,MAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,IAAI,CAACmB,OADR,CAZF,EAeE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,EAAEnB,IAAI,CAACoB,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAfF,CADF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,CAFF,CADO,CAAP;AA2BH;;AAvEqC;;AA0E1C,eAAevB,WAAf","sourcesContent":["import React from \"react\";\nimport Link from \"next/link\"\n\n\nclass PostExcerpt extends React.Component {\n\n    getImage(post) {\n        if (!post.thumbnailImage) {\n          return (\n            <img\n              src=\"/default-image.png\"\n              width=\"150px\"\n              className=\"img-fluid\"\n              alt={post.title}\n            />\n          );\n        }\n        return (\n          <img\n            src={post.thumbnailImage}\n            width=\"150px\"\n            className=\"img-fluid\"\n            alt={post.title}\n          />\n        );\n      }\n      buildTag(tag, index) {\n        const tagColors = [\n          \"primary\",\n          \"secondary\",\n          \"success\",\n          \"danger\",\n          \"warning\",\n          \"info\",\n          \"dark\"\n        ];\n        const tagColor =\n          \"badge badge-pill badge-\" +\n          tagColors[Math.floor(Math.random() * tagColors.length)];\n        return (\n          <span key={index} className={tagColor}>\n            {tag}\n          </span>\n        );\n      }\n    render(){\n        console.log(this.props)\n        const {index, post} = this.props;\n        return <div className=\"card border-0 m-2 article\" key={index}>\n        <div className=\"row no-gutters\">\n          <div className=\"col-auto\">{this.getImage(post)}</div>\n          <div className=\"col\">\n            <div className=\"card-block px-2\">\n              <h2 className=\"card-title\">{post.title}</h2>\n\n              <small className=\"text-muted\">\n                <strong>Fecha publicaci√≥n: </strong>\n                {post.date}\n                <strong> Autor: </strong> Sebastian Gomez\n                <strong> En: </strong>\n                {post.tags.map((tag, index) => {\n                  return this.buildTag(tag, index);\n                })}\n              </small>\n              <p className=\"card-text text-justify\">\n                {post.excerpt}\n              </p>\n              <Link href=\"/[slug]\" as={post.slug}>\n                <a>Seguir Leyendo</a>\n              </Link>\n            </div>\n            <hr />\n          </div>\n        </div>\n      </div>\n    }\n}\n\nexport default PostExcerpt;"]},"metadata":{},"sourceType":"module"}