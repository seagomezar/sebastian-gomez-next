{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/s.gomez/Desktop/sebastian-gomez/components/PostList.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\n\nvar PostList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostList, _React$Component);\n\n  function PostList() {\n    _classCallCheck(this, PostList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PostList).apply(this, arguments));\n  }\n\n  _createClass(PostList, [{\n    key: \"render\",\n    value: function render() {\n      var posts = [{\n        id: 1,\n        title: 'todo sobre animaciones en css',\n        slug: 'todo-sobre-animaciones-en-css',\n        excerpt: \"Las transiciones hacen parte del conjunto de herramientas que poseemos como desarrolladores FrontEnd para mejorar la experiencia del usuario dentro de nuestra aplicaci\\xF3n Web. Son \\xFAtiles porque nos permiten animar el cambio de valores en las distintas propiedades de un elemento lo que puede hacerlo m\\xE1s llamativo al usuario e invitarlo a interactuar con \\xE9l. En este post tratar\\xE9 de cubrir el extenso tema de transiciones con diversos ejemplos adaptados desde la especificaci\\xF3n.\"\n      }];\n      posts.push(posts[0]).push(posts[0]).push(posts[0]).push(posts[0]).push(posts[0]);\n      console.log(posts);\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return PostList;\n}(React.Component);\n\nexport default PostList;","map":{"version":3,"sources":["/Users/s.gomez/Desktop/sebastian-gomez/components/PostList.js"],"names":["React","PostList","posts","id","title","slug","excerpt","push","console","log","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAIMC,Q;;;;;;;;;;;;;6BAEO;AACL,UAAIC,KAAK,GAAG,CACR;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE,+BAAf;AAAgDC,QAAAA,IAAI,EAAE,+BAAtD;AAAuFC,QAAAA,OAAO;AAA9F,OADQ,CAAZ;AAGAJ,MAAAA,KAAK,CAACK,IAAN,CAAWL,KAAK,CAAC,CAAD,CAAhB,EAAqBK,IAArB,CAA0BL,KAAK,CAAC,CAAD,CAA/B,EAAoCK,IAApC,CAAyCL,KAAK,CAAC,CAAD,CAA9C,EAAmDK,IAAnD,CAAwDL,KAAK,CAAC,CAAD,CAA7D,EAAkEK,IAAlE,CAAuEL,KAAK,CAAC,CAAD,CAA5E;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;;;EATkBF,KAAK,CAACU,S;;AAY7B,eAAeT,QAAf","sourcesContent":["import React from \"react\";\n\n\n\nclass PostList extends React.Component {\n\n    render() {\n        let posts = [\n            {id: 1, title: 'todo sobre animaciones en css', slug: 'todo-sobre-animaciones-en-css', excerpt: `Las transiciones hacen parte del conjunto de herramientas que poseemos como desarrolladores FrontEnd para mejorar la experiencia del usuario dentro de nuestra aplicación Web. Son útiles porque nos permiten animar el cambio de valores en las distintas propiedades de un elemento lo que puede hacerlo más llamativo al usuario e invitarlo a interactuar con él. En este post trataré de cubrir el extenso tema de transiciones con diversos ejemplos adaptados desde la especificación.`}\n        ]\n        posts.push(posts[0]).push(posts[0]).push(posts[0]).push(posts[0]).push(posts[0])\n        console.log(posts)\n        return <div></div>\n    }\n}\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}